'use client'\n\nimport React, { useState } from 'react'\nimport { BirthDataForm } from '@/components/astrology/BirthDataForm'\nimport { SynastryChart } from '@/components/astrology/SynastryChart'\nimport { astrologyCalculator } from '@/lib/astrology/calculator'\nimport { synastryCalculator } from '@/lib/astrology/synastry'\nimport { BirthData, BirthChart, SynastryChart as SynastryChartType } from '@/types/astrology'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { cn } from '@/lib/utils'\nimport { \n  HeartIcon, \n  UsersIcon, \n  ArrowLeftIcon,\n  SparklesIcon,\n  CalendarIcon,\n  MapPinIcon,\n  ClockIcon\n} from 'lucide-react'\nimport Link from 'next/link'\n\ntype CalculationStep = 'person1' | 'person2' | 'calculating' | 'results'\n\nexport default function CompatibilityPage() {\n  const [step, setStep] = useState<CalculationStep>('person1')\n  const [person1Chart, setPerson1Chart] = useState<BirthChart | null>(null)\n  const [person2Chart, setPerson2Chart] = useState<BirthChart | null>(null)\n  const [synastryChart, setSynastryChart] = useState<SynastryChartType | null>(null)\n  const [person1Name, setPerson1Name] = useState<string>('')\n  const [person2Name, setPerson2Name] = useState<string>('')\n  const [isCalculating, setIsCalculating] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const handlePerson1Submit = async (birthData: BirthData) => {\n    setIsCalculating(true)\n    setError(null)\n\n    try {\n      await astrologyCalculator.initialize()\n      const result = await astrologyCalculator.calculateBirthChart(birthData)\n      \n      if (result.success && result.data) {\n        setPerson1Chart(result.data)\n        setPerson1Name(birthData.name || 'Person 1')\n        setStep('person2')\n      } else {\n        setError(result.error || 'Failed to calculate first birth chart')\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred')\n    } finally {\n      setIsCalculating(false)\n    }\n  }\n\n  const handlePerson2Submit = async (birthData: BirthData) => {\n    setIsCalculating(true)\n    setError(null)\n    setStep('calculating')\n\n    try {\n      await astrologyCalculator.initialize()\n      const result = await astrologyCalculator.calculateBirthChart(birthData)\n      \n      if (result.success && result.data) {\n        setPerson2Chart(result.data)\n        setPerson2Name(birthData.name || 'Person 2')\n        \n        // Calculate synastry\n        if (person1Chart) {\n          const synastryResult = await synastryCalculator.calculateSynastry(person1Chart, result.data)\n          \n          if (synastryResult.success && synastryResult.data) {\n            setSynastryChart(synastryResult.data)\n            setStep('results')\n          } else {\n            setError(synastryResult.error || 'Failed to calculate compatibility')\n            setStep('person2')\n          }\n        }\n      } else {\n        setError(result.error || 'Failed to calculate second birth chart')\n        setStep('person2')\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred')\n      setStep('person2')\n    } finally {\n      setIsCalculating(false)\n    }\n  }\n\n  const resetCalculation = () => {\n    setStep('person1')\n    setPerson1Chart(null)\n    setPerson2Chart(null)\n    setSynastryChart(null)\n    setPerson1Name('')\n    setPerson2Name('')\n    setError(null)\n  }\n\n  const goBack = () => {\n    if (step === 'person2') {\n      setStep('person1')\n      setPerson1Chart(null)\n      setPerson1Name('')\n    } else if (step === 'results') {\n      setStep('person2')\n      setPerson2Chart(null)\n      setPerson2Name('')\n      setSynastryChart(null)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-rose-50 via-pink-50 to-purple-50 dark:from-gray-900 dark:via-rose-900 dark:to-purple-900\">\n      {/* Header */}\n      <header className=\"border-b bg-white/80 backdrop-blur-sm dark:bg-gray-900/80\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <Link href=\"/\" className=\"flex items-center space-x-2 text-muted-foreground hover:text-foreground transition-colors\">\n                <ArrowLeftIcon className=\"h-5 w-5\" />\n                <span>Back to Charts</span>\n              </Link>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"relative\">\n                <HeartIcon className=\"h-8 w-8 text-rose-600\" />\n                <SparklesIcon className=\"absolute -top-1 -right-1 h-4 w-4 text-yellow-500\" />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold bg-gradient-to-r from-rose-600 to-purple-600 bg-clip-text text-transparent\">\n                  Relationship Compatibility\n                </h1>\n                <p className=\"text-sm text-muted-foreground\">\n                  Discover your cosmic connection through synastry analysis\n                </p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Badge variant=\"cosmic\">Synastry Analysis</Badge>\n              <Badge variant=\"outline\">Professional</Badge>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"container mx-auto px-4 py-8\">\n        {step === 'person1' && (\n          <div className=\"space-y-8\">\n            {/* Hero Section */}\n            <div className=\"text-center space-y-4\">\n              <div className=\"flex justify-center space-x-4 mb-6\">\n                <HeartIcon className=\"h-12 w-12 text-rose-500 animate-pulse\" />\n                <UsersIcon className=\"h-12 w-12 text-purple-400 animate-pulse\" style={{ animationDelay: '0.5s' }} />\n                <SparklesIcon className=\"h-12 w-12 text-pink-500 animate-pulse\" style={{ animationDelay: '1s' }} />\n              </div>\n              <h2 className=\"text-4xl font-bold bg-gradient-to-r from-rose-600 via-purple-600 to-pink-600 bg-clip-text text-transparent\">\n                Explore Your Cosmic Connection\n              </h2>\n              <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n                Discover the astrological dynamics between two people through professional synastry analysis. \n                Understand your compatibility, strengths, and growth opportunities together.\n              </p>\n            </div>\n\n            {/* Features Grid */}\n            <div className=\"grid md:grid-cols-3 gap-6 mb-8\">\n              <Card className=\"text-center\">\n                <CardHeader>\n                  <div className=\"mx-auto w-12 h-12 bg-rose-100 dark:bg-rose-900 rounded-full flex items-center justify-center mb-2\">\n                    <HeartIcon className=\"h-6 w-6 text-rose-600\" />\n                  </div>\n                  <CardTitle className=\"text-lg\">Compatibility Analysis</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Comprehensive compatibility scoring across romantic, emotional, \n                    communication, spiritual, and practical dimensions.\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card className=\"text-center\">\n                <CardHeader>\n                  <div className=\"mx-auto w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-full flex items-center justify-center mb-2\">\n                    <UsersIcon className=\"h-6 w-6 text-purple-600\" />\n                  </div>\n                  <CardTitle className=\"text-lg\">Synastry Aspects</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Detailed analysis of planetary aspects between charts, \n                    revealing the dynamics and energy exchanges in your relationship.\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card className=\"text-center\">\n                <CardHeader>\n                  <div className=\"mx-auto w-12 h-12 bg-pink-100 dark:bg-pink-900 rounded-full flex items-center justify-center mb-2\">\n                    <SparklesIcon className=\"h-6 w-6 text-pink-600\" />\n                  </div>\n                  <CardTitle className=\"text-lg\">Relationship Insights</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Personalized advice and insights to help you understand \n                    and nurture your unique connection.\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n\n            <div className=\"max-w-2xl mx-auto\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-center\">First Person's Birth Information</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <BirthDataForm \n                    onSubmit={handlePerson1Submit}\n                    isLoading={isCalculating}\n                  />\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        )}\n\n        {step === 'person2' && (\n          <div className=\"space-y-8\">\n            <div className=\"flex items-center justify-between\">\n              <Button variant=\"outline\" onClick={goBack}>\n                <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n                Back to First Person\n              </Button>\n              <div className=\"text-center\">\n                <h2 className=\"text-2xl font-bold\">Second Person's Information</h2>\n                <p className=\"text-muted-foreground\">First person: {person1Name}</p>\n              </div>\n              <div className=\"w-24\" /> {/* Spacer */}\n            </div>\n\n            <div className=\"max-w-2xl mx-auto\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-center\">Second Person's Birth Information</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <BirthDataForm \n                    onSubmit={handlePerson2Submit}\n                    isLoading={isCalculating}\n                  />\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        )}\n\n        {step === 'calculating' && (\n          <div className=\"flex items-center justify-center min-h-[400px]\">\n            <Card className=\"w-full max-w-md\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center space-y-4\">\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto\"></div>\n                  <h3 className=\"text-lg font-semibold\">Calculating Compatibility</h3>\n                  <p className=\"text-muted-foreground\">\n                    Analyzing planetary aspects and relationship dynamics...\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {step === 'results' && synastryChart && (\n          <div className=\"space-y-8\">\n            <div className=\"flex items-center justify-between\">\n              <Button variant=\"outline\" onClick={goBack}>\n                <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n                Modify Information\n              </Button>\n              <div className=\"text-center\">\n                <h2 className=\"text-3xl font-bold\">\n                  {person1Name} & {person2Name}\n                </h2>\n                <p className=\"text-muted-foreground\">Relationship Compatibility Analysis</p>\n              </div>\n              <Button variant=\"outline\" onClick={resetCalculation}>\n                New Analysis\n              </Button>\n            </div>\n\n            <SynastryChart \n              synastryChart={synastryChart}\n              person1Name={person1Name}\n              person2Name={person2Name}\n            />\n          </div>\n        )}\n\n        {/* Error Display */}\n        {error && (\n          <Card className=\"border-red-200 bg-red-50 dark:border-red-800 dark:bg-red-900/20 max-w-2xl mx-auto\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-4 h-4 bg-red-500 rounded-full\" />\n                <p className=\"text-red-700 dark:text-red-300 font-medium\">Calculation Error</p>\n              </div>\n              <p className=\"text-red-600 dark:text-red-400 mt-2\">{error}</p>\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                className=\"mt-4\"\n                onClick={() => setError(null)}\n              >\n                Try Again\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"border-t bg-white/80 backdrop-blur-sm dark:bg-gray-900/80 mt-16\">\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"text-center text-muted-foreground\">\n            <p className=\"text-sm\">\n              Professional Synastry Analysis • Swiss Ephemeris Accuracy • \n              Built with Love and Cosmic Wisdom\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}"