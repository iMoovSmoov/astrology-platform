'use client'\n\nimport React, { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { \n  educationSystem, \n  LEARNING_PATHS, \n  LearningPath, \n  LessonContent \n} from '@/lib/education/curriculum'\nimport { cn } from '@/lib/utils'\nimport { \n  BookOpenIcon,\n  GraduationCapIcon,\n  StarIcon,\n  ClockIcon,\n  CheckCircleIcon,\n  PlayCircleIcon,\n  ArrowRightIcon,\n  LightbulbIcon,\n  TrophyIcon,\n  UsersIcon,\n  ArrowLeftIcon\n} from 'lucide-react'\nimport Link from 'next/link'\n\ntype ViewMode = 'overview' | 'path' | 'lesson'\n\nexport default function LearnPage() {\n  const [viewMode, setViewMode] = useState<ViewMode>('overview')\n  const [selectedPath, setSelectedPath] = useState<string | null>(null)\n  const [selectedLesson, setSelectedLesson] = useState<string | null>(null)\n  const [completedLessons, setCompletedLessons] = useState<string[]>(['intro-to-astrology']) // Mock completed lessons\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n  const [showQuizResults, setShowQuizResults] = useState(false)\n  const [quizScore, setQuizScore] = useState(0)\n\n  const handlePathSelect = (pathId: string) => {\n    setSelectedPath(pathId)\n    setViewMode('path')\n  }\n\n  const handleLessonSelect = (lessonId: string) => {\n    setSelectedLesson(lessonId)\n    setViewMode('lesson')\n  }\n\n  const handleLessonComplete = (lessonId: string) => {\n    if (!completedLessons.includes(lessonId)) {\n      setCompletedLessons([...completedLessons, lessonId])\n    }\n  }\n\n  const currentPath = selectedPath ? educationSystem.getLearningPath(selectedPath) : null\n  const currentLesson = selectedLesson ? educationSystem.getLesson(selectedLesson) : null\n  const pathProgress = selectedPath ? educationSystem.calculateProgress(completedLessons, selectedPath) : 0\n\n  if (viewMode === 'lesson' && currentLesson) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-blue-900 dark:to-indigo-900\">\n        {/* Header */}\n        <header className=\"border-b bg-white/80 backdrop-blur-sm dark:bg-gray-900/80\">\n          <div className=\"container mx-auto px-4 py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => setViewMode(selectedPath ? 'path' : 'overview')}\n                >\n                  <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n                  Back\n                </Button>\n                <div>\n                  <h1 className=\"text-2xl font-bold\">{currentLesson.title}</h1>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {currentLesson.difficulty} â€¢ {currentLesson.duration} minutes\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Badge variant={currentLesson.difficulty === 'beginner' ? 'secondary' : \n                              currentLesson.difficulty === 'intermediate' ? 'default' : 'destructive'}>\n                  {currentLesson.difficulty}\n                </Badge>\n                <Badge variant=\"outline\">\n                  <ClockIcon className=\"h-3 w-3 mr-1\" />\n                  {currentLesson.duration}m\n                </Badge>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Lesson Content */}\n        <main className=\"container mx-auto px-4 py-8\">\n          <div className=\"max-w-4xl mx-auto space-y-8\">\n            {/* Lesson Description */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <BookOpenIcon className=\"h-5 w-5 text-blue-600\" />\n                  <span>Lesson Overview</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground mb-4\">{currentLesson.description}</p>\n                <div className=\"flex flex-wrap gap-2\">\n                  {currentLesson.keyPoints.map((point, index) => (\n                    <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                      {point}\n                    </Badge>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Main Content */}\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"prose prose-lg max-w-none dark:prose-invert\">\n                  <div dangerouslySetInnerHTML={{ __html: currentLesson.content.replace(/\\n/g, '<br>') }} />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Exercises */}\n            {currentLesson.exercises.length > 0 && (\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <LightbulbIcon className=\"h-5 w-5 text-yellow-600\" />\n                    <span>Practice Exercises</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {currentLesson.exercises.map((exercise, index) => (\n                    <div key={exercise.id} className=\"p-4 border rounded-lg\">\n                      <h4 className=\"font-semibold mb-2\">{exercise.title}</h4>\n                      <p className=\"text-sm text-muted-foreground mb-3\">{exercise.instructions}</p>\n                      {exercise.example && (\n                        <div className=\"p-3 bg-muted rounded-lg\">\n                          <p className=\"text-sm\"><strong>Example:</strong> {exercise.example}</p>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Quiz */}\n            {currentLesson.quiz.length > 0 && (\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <TrophyIcon className=\"h-5 w-5 text-purple-600\" />\n                    <span>Knowledge Check</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {!showQuizResults ? (\n                    <div className=\"space-y-4\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm text-muted-foreground\">\n                          Question {currentQuestionIndex + 1} of {currentLesson.quiz.length}\n                        </span>\n                        <Progress \n                          value={((currentQuestionIndex + 1) / currentLesson.quiz.length) * 100} \n                          className=\"w-32\" \n                        />\n                      </div>\n                      \n                      <div className=\"space-y-4\">\n                        <h4 className=\"font-semibold\">\n                          {currentLesson.quiz[currentQuestionIndex].question}\n                        </h4>\n                        <div className=\"space-y-2\">\n                          {currentLesson.quiz[currentQuestionIndex].options.map((option, index) => (\n                            <Button\n                              key={index}\n                              variant=\"outline\"\n                              className=\"w-full justify-start text-left h-auto p-4\"\n                              onClick={() => {\n                                // Handle quiz answer logic here\n                                if (currentQuestionIndex < currentLesson.quiz.length - 1) {\n                                  setCurrentQuestionIndex(currentQuestionIndex + 1)\n                                } else {\n                                  setShowQuizResults(true)\n                                  setQuizScore(Math.floor(Math.random() * 40) + 60) // Mock score\n                                }\n                              }}\n                            >\n                              {option}\n                            </Button>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center space-y-4\">\n                      <div className=\"text-4xl font-bold text-green-600\">{quizScore}%</div>\n                      <p className=\"text-lg font-semibold\">Quiz Complete!</p>\n                      <p className=\"text-muted-foreground\">\n                        {quizScore >= 80 ? 'Excellent work! You\\'ve mastered this lesson.' :\n                         quizScore >= 60 ? 'Good job! You understand the key concepts.' :\n                         'Consider reviewing the lesson content and trying again.'}\n                      </p>\n                      <Button \n                        onClick={() => {\n                          handleLessonComplete(currentLesson.id)\n                          setViewMode(selectedPath ? 'path' : 'overview')\n                        }}\n                        className=\"mt-4\"\n                      >\n                        {quizScore >= 60 ? 'Complete Lesson' : 'Review Lesson'}\n                      </Button>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Navigation */}\n            <div className=\"flex justify-between\">\n              <Button \n                variant=\"outline\"\n                onClick={() => setViewMode(selectedPath ? 'path' : 'overview')}\n              >\n                Back to Course\n              </Button>\n              \n              {currentLesson.quiz.length === 0 && (\n                <Button \n                  onClick={() => {\n                    handleLessonComplete(currentLesson.id)\n                    setViewMode(selectedPath ? 'path' : 'overview')\n                  }}\n                >\n                  Complete Lesson\n                </Button>\n              )}\n            </div>\n          </div>\n        </main>\n      </div>\n    )\n  }\n\n  if (viewMode === 'path' && currentPath) {\n    const pathLessons = educationSystem.getPathLessons(selectedPath!)\n    \n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-blue-900 dark:to-indigo-900\">\n        {/* Header */}\n        <header className=\"border-b bg-white/80 backdrop-blur-sm dark:bg-gray-900/80\">\n          <div className=\"container mx-auto px-4 py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => setViewMode('overview')}\n                >\n                  <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n                  All Courses\n                </Button>\n                <div>\n                  <h1 className=\"text-2xl font-bold\">{currentPath.title}</h1>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {currentPath.level} â€¢ {currentPath.estimatedHours} hours â€¢ {pathProgress}% complete\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Badge variant={currentPath.level === 'beginner' ? 'secondary' : \n                              currentPath.level === 'intermediate' ? 'default' : 'destructive'}>\n                  {currentPath.level}\n                </Badge>\n                {currentPath.certificate && (\n                  <Badge variant=\"outline\">\n                    <TrophyIcon className=\"h-3 w-3 mr-1\" />\n                    Certificate\n                  </Badge>\n                )}\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Course Content */}\n        <main className=\"container mx-auto px-4 py-8\">\n          <div className=\"max-w-4xl mx-auto space-y-8\">\n            {/* Course Overview */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Course Overview</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground mb-4\">{currentPath.description}</p>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Progress</span>\n                    <span>{pathProgress}%</span>\n                  </div>\n                  <Progress value={pathProgress} className=\"h-2\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Lessons */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Lessons</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {pathLessons.map((lesson, index) => {\n                    const isCompleted = completedLessons.includes(lesson.id)\n                    const isAvailable = lesson.prerequisites.every(prereq => completedLessons.includes(prereq))\n                    \n                    return (\n                      <div \n                        key={lesson.id}\n                        className={cn(\n                          'flex items-center justify-between p-4 border rounded-lg transition-colors',\n                          isAvailable ? 'hover:bg-muted/50 cursor-pointer' : 'opacity-50 cursor-not-allowed'\n                        )}\n                        onClick={() => isAvailable && handleLessonSelect(lesson.id)}\n                      >\n                        <div className=\"flex items-center space-x-4\">\n                          <div className=\"flex items-center justify-center w-8 h-8 rounded-full border-2\">\n                            {isCompleted ? (\n                              <CheckCircleIcon className=\"h-5 w-5 text-green-600\" />\n                            ) : isAvailable ? (\n                              <PlayCircleIcon className=\"h-5 w-5 text-blue-600\" />\n                            ) : (\n                              <span className=\"text-sm font-medium text-muted-foreground\">{index + 1}</span>\n                            )}\n                          </div>\n                          <div>\n                            <h4 className=\"font-medium\">{lesson.title}</h4>\n                            <p className=\"text-sm text-muted-foreground\">{lesson.description}</p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            {lesson.duration}m\n                          </Badge>\n                          <Badge variant={lesson.difficulty === 'beginner' ? 'secondary' : \n                                        lesson.difficulty === 'intermediate' ? 'default' : 'destructive'}\n                                 className=\"text-xs\">\n                            {lesson.difficulty}\n                          </Badge>\n                          {isAvailable && <ArrowRightIcon className=\"h-4 w-4 text-muted-foreground\" />}\n                        </div>\n                      </div>\n                    )\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </main>\n      </div>\n    )\n  }\n\n  // Overview mode\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-blue-900 dark:to-indigo-900\">\n      {/* Header */}\n      <header className=\"border-b bg-white/80 backdrop-blur-sm dark:bg-gray-900/80\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <Link href=\"/\" className=\"flex items-center space-x-2 text-muted-foreground hover:text-foreground transition-colors\">\n                <ArrowLeftIcon className=\"h-5 w-5\" />\n                <span>Back to Platform</span>\n              </Link>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"relative\">\n                <GraduationCapIcon className=\"h-8 w-8 text-blue-600\" />\n                <StarIcon className=\"absolute -top-1 -right-1 h-4 w-4 text-yellow-500\" />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\n                  Astrology Academy\n                </h1>\n                <p className=\"text-sm text-muted-foreground\">\n                  Master the ancient art of astrology with structured learning paths\n                </p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Badge variant=\"cosmic\">Professional Curriculum</Badge>\n              <Badge variant=\"outline\">Certificates Available</Badge>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"container mx-auto px-4 py-8\">\n        {/* Hero Section */}\n        <div className=\"text-center space-y-4 mb-12\">\n          <div className=\"flex justify-center space-x-4 mb-6\">\n            <BookOpenIcon className=\"h-12 w-12 text-blue-500 animate-pulse\" />\n            <GraduationCapIcon className=\"h-12 w-12 text-purple-400 animate-pulse\" style={{ animationDelay: '0.5s' }} />\n            <StarIcon className=\"h-12 w-12 text-indigo-500 animate-pulse\" style={{ animationDelay: '1s' }} />\n          </div>\n          <h2 className=\"text-4xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 bg-clip-text text-transparent\">\n            Learn Astrology from the Ground Up\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Comprehensive courses designed to take you from beginner to professional astrologer. \n            Learn at your own pace with interactive lessons, quizzes, and practical exercises.\n          </p>\n        </div>\n\n        {/* Learning Paths */}\n        <div className=\"space-y-8\">\n          <div className=\"text-center\">\n            <h3 className=\"text-2xl font-bold mb-2\">Choose Your Learning Path</h3>\n            <p className=\"text-muted-foreground\">Structured courses for every level of astrological knowledge</p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            {Object.values(LEARNING_PATHS).map((path) => {\n              const progress = educationSystem.calculateProgress(completedLessons, path.id)\n              const isStarted = progress > 0\n              \n              return (\n                <Card \n                  key={path.id} \n                  className=\"cursor-pointer transition-all hover:shadow-lg hover:scale-105\"\n                  onClick={() => handlePathSelect(path.id)}\n                >\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle className=\"text-lg\">{path.title}</CardTitle>\n                      <Badge variant={path.level === 'beginner' ? 'secondary' : \n                                    path.level === 'intermediate' ? 'default' : 'destructive'}>\n                        {path.level}\n                      </Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <p className=\"text-sm text-muted-foreground\">{path.description}</p>\n                    \n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"flex items-center space-x-1\">\n                          <ClockIcon className=\"h-3 w-3\" />\n                          <span>{path.estimatedHours} hours</span>\n                        </span>\n                        <span className=\"flex items-center space-x-1\">\n                          <BookOpenIcon className=\"h-3 w-3\" />\n                          <span>{path.lessons.length} lessons</span>\n                        </span>\n                      </div>\n                      \n                      {isStarted && (\n                        <div className=\"space-y-1\">\n                          <div className=\"flex justify-between text-xs\">\n                            <span>Progress</span>\n                            <span>{progress}%</span>\n                          </div>\n                          <Progress value={progress} className=\"h-1\" />\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        {path.certificate && (\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            <TrophyIcon className=\"h-3 w-3 mr-1\" />\n                            Certificate\n                          </Badge>\n                        )}\n                      </div>\n                      <Button size=\"sm\" variant={isStarted ? 'default' : 'outline'}>\n                        {isStarted ? 'Continue' : 'Start Course'}\n                        <ArrowRightIcon className=\"h-3 w-3 ml-1\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* Features */}\n        <div className=\"mt-16 grid md:grid-cols-3 gap-6\">\n          <Card className=\"text-center\">\n            <CardHeader>\n              <div className=\"mx-auto w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mb-2\">\n                <BookOpenIcon className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <CardTitle className=\"text-lg\">Comprehensive Curriculum</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                From zodiac signs to advanced techniques, our curriculum covers \n                everything you need to become a skilled astrologer.\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardHeader>\n              <div className=\"mx-auto w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-full flex items-center justify-center mb-2\">\n                <UsersIcon className=\"h-6 w-6 text-purple-600\" />\n              </div>\n              <CardTitle className=\"text-lg\">Interactive Learning</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                Engage with interactive exercises, quizzes, and practical \n                applications to reinforce your learning.\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardHeader>\n              <div className=\"mx-auto w-12 h-12 bg-indigo-100 dark:bg-indigo-900 rounded-full flex items-center justify-center mb-2\">\n                <TrophyIcon className=\"h-6 w-6 text-indigo-600\" />\n              </div>\n              <CardTitle className=\"text-lg\">Professional Certificates</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                Earn certificates upon course completion to validate \n                your astrological knowledge and skills.\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      {/* Footer */}\n      <footer className=\"border-t bg-white/80 backdrop-blur-sm dark:bg-gray-900/80 mt-16\">\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"text-center text-muted-foreground\">\n            <p className=\"text-sm\">\n              Professional Astrology Education â€¢ Structured Learning Paths â€¢ \n              Interactive Curriculum with Certificates\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}"