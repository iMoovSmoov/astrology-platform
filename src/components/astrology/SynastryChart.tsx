'use client'\n\nimport React, { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Progress } from '@/components/ui/progress'\nimport { SynastryChart as SynastryChartType, BirthChart } from '@/types/astrology'\nimport { SynastryAspect, CompatibilityScore, SynastryInterpretation } from '@/lib/astrology/synastry'\nimport { cn, formatZodiacPosition } from '@/lib/utils'\nimport { \n  HeartIcon, \n  MessageCircleIcon, \n  BrainIcon, \n  SparklesIcon, \n  ToolIcon,\n  TrendingUpIcon,\n  AlertTriangleIcon,\n  LightbulbIcon,\n  UsersIcon\n} from 'lucide-react'\n\ninterface SynastryChartProps {\n  synastryChart: SynastryChartType\n  person1Name?: string\n  person2Name?: string\n  className?: string\n}\n\nexport function SynastryChart({ \n  synastryChart, \n  person1Name = 'Person 1', \n  person2Name = 'Person 2',\n  className \n}: SynastryChartProps) {\n  const [selectedAspect, setSelectedAspect] = useState<SynastryAspect | null>(null)\n\n  // Mock compatibility score and interpretation (would come from synastry calculation)\n  const compatibilityScore: CompatibilityScore = {\n    overall: synastryChart.compatibilityScore,\n    romantic: 78,\n    communication: 65,\n    emotional: 82,\n    spiritual: 71,\n    practical: 59,\n    breakdown: {\n      excellentAspects: 8,\n      goodAspects: 12,\n      challengingAspects: 6,\n      difficultAspects: 3\n    }\n  }\n\n  const interpretation: SynastryInterpretation = {\n    summary: synastryChart.strengths.join(' ') + ' ' + synastryChart.challenges.join(' '),\n    strengths: synastryChart.strengths,\n    challenges: synastryChart.challenges,\n    advice: [\n      'Focus on your natural emotional connection and build from there',\n      'Practice patience during communication challenges',\n      'Celebrate your shared spiritual interests and values',\n      'Work together on practical matters to strengthen your bond'\n    ],\n    keyAspects: synastryChart.aspects.slice(0, 8) as SynastryAspect[],\n    elementCompatibility: {\n      fire: 25,\n      earth: 30,\n      air: 20,\n      water: 25,\n      balance: 'harmonious'\n    },\n    modalityCompatibility: {\n      cardinal: 35,\n      fixed: 40,\n      mutable: 25,\n      balance: 'complementary'\n    }\n  }\n\n  const getCompatibilityColor = (score: number) => {\n    if (score >= 80) return 'text-green-600'\n    if (score >= 65) return 'text-blue-600'\n    if (score >= 50) return 'text-yellow-600'\n    return 'text-red-600'\n  }\n\n  const getCompatibilityBadge = (compatibility: SynastryAspect['compatibility']) => {\n    const variants = {\n      excellent: 'default',\n      good: 'secondary',\n      challenging: 'outline',\n      difficult: 'destructive'\n    } as const\n    return variants[compatibility]\n  }\n\n  const getCategoryIcon = (category: SynastryAspect['category']) => {\n    const icons = {\n      romantic: HeartIcon,\n      communication: MessageCircleIcon,\n      emotional: BrainIcon,\n      spiritual: SparklesIcon,\n      practical: ToolIcon\n    }\n    return icons[category]\n  }\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <UsersIcon className=\"h-6 w-6 text-purple-600\" />\n              <span>Relationship Compatibility</span>\n            </div>\n            <Badge \n              variant=\"cosmic\" \n              className=\"text-lg px-4 py-2\"\n            >\n              {compatibilityScore.overall}% Compatible\n            </Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <div className=\"text-center\">\n              <h3 className=\"font-semibold text-lg mb-2\">{person1Name}</h3>\n              <div className=\"text-sm text-muted-foreground\">\n                {synastryChart.person1.birthData.date.toLocaleDateString()}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                {synastryChart.person1.birthData.location.city}\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <h3 className=\"font-semibold text-lg mb-2\">{person2Name}</h3>\n              <div className=\"text-sm text-muted-foreground\">\n                {synastryChart.person2.birthData.date.toLocaleDateString()}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                {synastryChart.person2.birthData.location.city}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Compatibility Scores */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <TrendingUpIcon className=\"h-5 w-5\" />\n            <span>Compatibility Breakdown</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {/* Overall Score */}\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Overall Compatibility</span>\n                <span className={cn('font-bold text-lg', getCompatibilityColor(compatibilityScore.overall))}>\n                  {compatibilityScore.overall}%\n                </span>\n              </div>\n              <Progress value={compatibilityScore.overall} className=\"h-3\" />\n            </div>\n\n            {/* Category Scores */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <HeartIcon className=\"h-4 w-4 text-red-500\" />\n                    <span className=\"text-sm\">Romantic</span>\n                  </div>\n                  <span className={cn('font-medium', getCompatibilityColor(compatibilityScore.romantic))}>\n                    {compatibilityScore.romantic}%\n                  </span>\n                </div>\n                <Progress value={compatibilityScore.romantic} className=\"h-2\" />\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <MessageCircleIcon className=\"h-4 w-4 text-blue-500\" />\n                    <span className=\"text-sm\">Communication</span>\n                  </div>\n                  <span className={cn('font-medium', getCompatibilityColor(compatibilityScore.communication))}>\n                    {compatibilityScore.communication}%\n                  </span>\n                </div>\n                <Progress value={compatibilityScore.communication} className=\"h-2\" />\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <BrainIcon className=\"h-4 w-4 text-purple-500\" />\n                    <span className=\"text-sm\">Emotional</span>\n                  </div>\n                  <span className={cn('font-medium', getCompatibilityColor(compatibilityScore.emotional))}>\n                    {compatibilityScore.emotional}%\n                  </span>\n                </div>\n                <Progress value={compatibilityScore.emotional} className=\"h-2\" />\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <SparklesIcon className=\"h-4 w-4 text-yellow-500\" />\n                    <span className=\"text-sm\">Spiritual</span>\n                  </div>\n                  <span className={cn('font-medium', getCompatibilityColor(compatibilityScore.spiritual))}>\n                    {compatibilityScore.spiritual}%\n                  </span>\n                </div>\n                <Progress value={compatibilityScore.spiritual} className=\"h-2\" />\n              </div>\n\n              <div className=\"space-y-2 md:col-span-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <ToolIcon className=\"h-4 w-4 text-green-500\" />\n                    <span className=\"text-sm\">Practical</span>\n                  </div>\n                  <span className={cn('font-medium', getCompatibilityColor(compatibilityScore.practical))}>\n                    {compatibilityScore.practical}%\n                  </span>\n                </div>\n                <Progress value={compatibilityScore.practical} className=\"h-2\" />\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Detailed Analysis Tabs */}\n      <Tabs defaultValue=\"summary\" className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"summary\">Summary</TabsTrigger>\n          <TabsTrigger value=\"aspects\">Aspects</TabsTrigger>\n          <TabsTrigger value=\"elements\">Elements</TabsTrigger>\n          <TabsTrigger value=\"advice\">Advice</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"summary\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Relationship Summary</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                {interpretation.summary}\n              </p>\n            </CardContent>\n          </Card>\n\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2 text-green-600\">\n                  <TrendingUpIcon className=\"h-5 w-5\" />\n                  <span>Strengths</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {interpretation.strengths.map((strength, index) => (\n                    <li key={index} className=\"flex items-start space-x-2\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\n                      <span className=\"text-sm\">{strength}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2 text-orange-600\">\n                  <AlertTriangleIcon className=\"h-5 w-5\" />\n                  <span>Challenges</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {interpretation.challenges.map((challenge, index) => (\n                    <li key={index} className=\"flex items-start space-x-2\">\n                      <div className=\"w-2 h-2 bg-orange-500 rounded-full mt-2 flex-shrink-0\" />\n                      <span className=\"text-sm\">{challenge}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"aspects\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Key Planetary Aspects</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {interpretation.keyAspects.map((aspect, index) => {\n                  const CategoryIcon = getCategoryIcon(aspect.category)\n                  return (\n                    <div \n                      key={index} \n                      className=\"flex items-center justify-between p-3 border rounded-lg hover:bg-muted/50 cursor-pointer transition-colors\"\n                      onClick={() => setSelectedAspect(aspect)}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <CategoryIcon className=\"h-4 w-4 text-muted-foreground\" />\n                        <div>\n                          <div className=\"font-medium\">\n                            {person1Name}'s {aspect.planet1} {getAspectSymbol(aspect.type)} {person2Name}'s {aspect.planet2}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground capitalize\">\n                            {aspect.type} • {aspect.category}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Badge variant={getCompatibilityBadge(aspect.compatibility)}>\n                          {aspect.compatibility}\n                        </Badge>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {(aspect.strength * 100).toFixed(0)}%\n                        </div>\n                      </div>\n                    </div>\n                  )\n                })}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Aspect Breakdown */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Aspect Distribution</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {compatibilityScore.breakdown.excellentAspects}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Excellent</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {compatibilityScore.breakdown.goodAspects}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Good</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-yellow-600\">\n                    {compatibilityScore.breakdown.challengingAspects}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Challenging</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-red-600\">\n                    {compatibilityScore.breakdown.difficultAspects}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Difficult</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"elements\" className=\"space-y-4\">\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Element Distribution</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-red-500 rounded-full\" />\n                      <span>Fire</span>\n                    </div>\n                    <span className=\"font-medium\">{interpretation.elementCompatibility.fire.toFixed(1)}%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-green-500 rounded-full\" />\n                      <span>Earth</span>\n                    </div>\n                    <span className=\"font-medium\">{interpretation.elementCompatibility.earth.toFixed(1)}%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-blue-500 rounded-full\" />\n                      <span>Air</span>\n                    </div>\n                    <span className=\"font-medium\">{interpretation.elementCompatibility.air.toFixed(1)}%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-cyan-500 rounded-full\" />\n                      <span>Water</span>\n                    </div>\n                    <span className=\"font-medium\">{interpretation.elementCompatibility.water.toFixed(1)}%</span>\n                  </div>\n                </div>\n                <div className=\"mt-4 p-3 bg-muted rounded-lg\">\n                  <div className=\"text-sm font-medium\">Balance: {interpretation.elementCompatibility.balance}</div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Modality Distribution</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-purple-500 rounded-full\" />\n                      <span>Cardinal</span>\n                    </div>\n                    <span className=\"font-medium\">{interpretation.modalityCompatibility.cardinal.toFixed(1)}%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-orange-500 rounded-full\" />\n                      <span>Fixed</span>\n                    </div>\n                    <span className=\"font-medium\">{interpretation.modalityCompatibility.fixed.toFixed(1)}%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-teal-500 rounded-full\" />\n                      <span>Mutable</span>\n                    </div>\n                    <span className=\"font-medium\">{interpretation.modalityCompatibility.mutable.toFixed(1)}%</span>\n                  </div>\n                </div>\n                <div className=\"mt-4 p-3 bg-muted rounded-lg\">\n                  <div className=\"text-sm font-medium\">Balance: {interpretation.modalityCompatibility.balance}</div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"advice\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <LightbulbIcon className=\"h-5 w-5\" />\n                <span>Relationship Advice</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {interpretation.advice.map((advice, index) => (\n                  <div key={index} className=\"flex items-start space-x-3 p-3 bg-muted/50 rounded-lg\">\n                    <LightbulbIcon className=\"h-5 w-5 text-yellow-500 mt-0.5 flex-shrink-0\" />\n                    <p className=\"text-sm\">{advice}</p>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Selected Aspect Detail */}\n      {selectedAspect && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Aspect Details</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <h4 className=\"font-medium\">\n                  {person1Name}'s {selectedAspect.planet1} {getAspectSymbol(selectedAspect.type)} {person2Name}'s {selectedAspect.planet2}\n                </h4>\n                <Button variant=\"outline\" size=\"sm\" onClick={() => setSelectedAspect(null)}>\n                  Close\n                </Button>\n              </div>\n              <p className=\"text-sm text-muted-foreground\">\n                {selectedAspect.interpretation}\n              </p>\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <span className=\"font-medium\">Orb:</span> {selectedAspect.orb.toFixed(2)}°\n                </div>\n                <div>\n                  <span className=\"font-medium\">Strength:</span> {(selectedAspect.strength * 100).toFixed(0)}%\n                </div>\n                <div>\n                  <span className=\"font-medium\">Category:</span> {selectedAspect.category}\n                </div>\n                <div>\n                  <span className=\"font-medium\">Type:</span> {selectedAspect.compatibility}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n\n// Helper function for aspect symbols\nfunction getAspectSymbol(aspectType: string): string {\n  switch (aspectType) {\n    case 'conjunction': return '☌'\n    case 'opposition': return '☍'\n    case 'trine': return '△'\n    case 'square': return '□'\n    case 'sextile': return '⚹'\n    case 'quincunx': return '⚻'\n    default: return '•'\n  }\n}