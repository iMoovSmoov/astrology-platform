'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Progress } from '@/components/ui/progress'\nimport { BirthChart } from '@/types/astrology'\nimport { DetailedInterpretation, interpretationEngine } from '@/lib/astrology/interpretations'\nimport { cn } from '@/lib/utils'\nimport { \n  BrainIcon,\n  HeartIcon,\n  BriefcaseIcon,\n  SparklesIcon,\n  ShieldIcon,\n  TrendingUpIcon,\n  LightbulbIcon,\n  StarIcon,\n  MoonIcon,\n  SunIcon,\n  ZapIcon,\n  CompassIcon,\n  BookOpenIcon,\n  GemIcon\n} from 'lucide-react'\n\ninterface ChartInterpretationProps {\n  chart: BirthChart\n  className?: string\n}\n\nexport function ChartInterpretation({ chart, className }: ChartInterpretationProps) {\n  const [interpretation, setInterpretation] = useState<DetailedInterpretation | null>(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [selectedPlanet, setSelectedPlanet] = useState<string | null>(null)\n\n  useEffect(() => {\n    generateInterpretation()\n  }, [chart])\n\n  const generateInterpretation = async () => {\n    setIsLoading(true)\n    try {\n      const result = await interpretationEngine.generateChartInterpretation(chart)\n      setInterpretation(result)\n    } catch (error) {\n      console.error('Failed to generate interpretation:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <Card className={cn('w-full', className)}>\n        <CardContent className=\"pt-6\">\n          <div className=\"flex items-center justify-center space-x-4 py-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600\"></div>\n            <div className=\"space-y-2\">\n              <h3 className=\"text-lg font-semibold\">Generating Your Personal Reading</h3>\n              <p className=\"text-muted-foreground\">Analyzing your cosmic blueprint...</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  if (!interpretation) {\n    return (\n      <Card className={cn('w-full', className)}>\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center py-8\">\n            <p className=\"text-muted-foreground\">Unable to generate interpretation. Please try again.</p>\n            <Button onClick={generateInterpretation} className=\"mt-4\">\n              Retry\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Summary Card */}\n      <Card className=\"bg-gradient-to-br from-purple-50 to-blue-50 dark:from-purple-900/20 dark:to-blue-900/20\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <SparklesIcon className=\"h-6 w-6 text-purple-600\" />\n            <span>Your Cosmic Blueprint</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-lg leading-relaxed text-muted-foreground\">\n            {interpretation.summary}\n          </p>\n        </CardContent>\n      </Card>\n\n      {/* Main Interpretation Tabs */}\n      <Tabs defaultValue=\"personality\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-6\">\n          <TabsTrigger value=\"personality\">Personality</TabsTrigger>\n          <TabsTrigger value=\"life-areas\">Life Areas</TabsTrigger>\n          <TabsTrigger value=\"planets\">Planets</TabsTrigger>\n          <TabsTrigger value=\"aspects\">Aspects</TabsTrigger>\n          <TabsTrigger value=\"soul-purpose\">Soul Purpose</TabsTrigger>\n          <TabsTrigger value=\"year-ahead\">Year Ahead</TabsTrigger>\n        </TabsList>\n\n        {/* Personality Tab */}\n        <TabsContent value=\"personality\" className=\"space-y-6\">\n          <div className=\"grid md:grid-cols-2 gap-6\">\n            {/* Core Traits */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <BrainIcon className=\"h-5 w-5 text-blue-600\" />\n                  <span>Core Traits</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex flex-wrap gap-2\">\n                  {interpretation.personality.coreTraits.map((trait, index) => (\n                    <Badge key={index} variant=\"secondary\" className=\"capitalize\">\n                      {trait}\n                    </Badge>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Strengths */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2 text-green-600\">\n                  <TrendingUpIcon className=\"h-5 w-5\" />\n                  <span>Strengths</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {interpretation.personality.strengths.map((strength, index) => (\n                    <li key={index} className=\"flex items-start space-x-2\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\n                      <span className=\"text-sm capitalize\">{strength}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n\n            {/* Challenges */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2 text-orange-600\">\n                  <ZapIcon className=\"h-5 w-5\" />\n                  <span>Growth Areas</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {interpretation.personality.challenges.map((challenge, index) => (\n                    <li key={index} className=\"flex items-start space-x-2\">\n                      <div className=\"w-2 h-2 bg-orange-500 rounded-full mt-2 flex-shrink-0\" />\n                      <span className=\"text-sm capitalize\">{challenge}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n\n            {/* Motivations */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2 text-purple-600\">\n                  <CompassIcon className=\"h-5 w-5\" />\n                  <span>Core Motivations</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {interpretation.personality.motivations.map((motivation, index) => (\n                    <li key={index} className=\"flex items-start space-x-2\">\n                      <div className=\"w-2 h-2 bg-purple-500 rounded-full mt-2 flex-shrink-0\" />\n                      <span className=\"text-sm capitalize\">{motivation}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Life Themes */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <BookOpenIcon className=\"h-5 w-5 text-indigo-600\" />\n                <span>Life Themes</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                {interpretation.personality.lifeThemes.map((theme, index) => (\n                  <div key={index} className=\"p-3 bg-muted/50 rounded-lg\">\n                    <span className=\"text-sm font-medium capitalize\">{theme}</span>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Life Areas Tab */}\n        <TabsContent value=\"life-areas\" className=\"space-y-6\">\n          <div className=\"grid gap-6\">\n            {/* Love & Relationships */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <HeartIcon className=\"h-5 w-5 text-red-500\" />\n                  <span>Love & Relationships</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium mb-2\">Your Love Style</h4>\n                  <p className=\"text-sm text-muted-foreground\">{interpretation.lifeAreas.love.style}</p>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2 text-green-600\">Needs</h4>\n                    <ul className=\"space-y-1\">\n                      {interpretation.lifeAreas.love.needs.map((need, index) => (\n                        <li key={index} className=\"text-sm text-muted-foreground\">• {need}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2 text-blue-600\">Advice</h4>\n                    <ul className=\"space-y-1\">\n                      {interpretation.lifeAreas.love.advice.map((advice, index) => (\n                        <li key={index} className=\"text-sm text-muted-foreground\">• {advice}</li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Career & Purpose */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <BriefcaseIcon className=\"h-5 w-5 text-blue-600\" />\n                  <span>Career & Purpose</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium mb-2\">Ideal Work Environment</h4>\n                  <p className=\"text-sm text-muted-foreground capitalize\">{interpretation.lifeAreas.career.idealEnvironment}</p>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2 text-green-600\">Natural Talents</h4>\n                    <ul className=\"space-y-1\">\n                      {interpretation.lifeAreas.career.talents.map((talent, index) => (\n                        <li key={index} className=\"text-sm text-muted-foreground\">• {talent}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2 text-blue-600\">Career Advice</h4>\n                    <ul className=\"space-y-1\">\n                      {interpretation.lifeAreas.career.advice.map((advice, index) => (\n                        <li key={index} className=\"text-sm text-muted-foreground\">• {advice}</li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Spirituality */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <SparklesIcon className=\"h-5 w-5 text-purple-600\" />\n                  <span>Spiritual Path</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium mb-2\">Your Spiritual Journey</h4>\n                  <p className=\"text-sm text-muted-foreground\">{interpretation.lifeAreas.spirituality.path}</p>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2 text-purple-600\">Spiritual Gifts</h4>\n                    <ul className=\"space-y-1\">\n                      {interpretation.lifeAreas.spirituality.gifts.map((gift, index) => (\n                        <li key={index} className=\"text-sm text-muted-foreground\">• {gift}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2 text-indigo-600\">Recommended Practices</h4>\n                    <ul className=\"space-y-1\">\n                      {interpretation.lifeAreas.spirituality.practices.map((practice, index) => (\n                        <li key={index} className=\"text-sm text-muted-foreground\">• {practice}</li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Planetary Influences Tab */}\n        <TabsContent value=\"planets\" className=\"space-y-6\">\n          <div className=\"grid gap-4\">\n            {interpretation.planetaryInfluences.map((influence, index) => (\n              <Card \n                key={index} \n                className={cn(\n                  'cursor-pointer transition-colors hover:bg-muted/50',\n                  selectedPlanet === influence.planet ? 'ring-2 ring-purple-500' : ''\n                )}\n                onClick={() => setSelectedPlanet(selectedPlanet === influence.planet ? null : influence.planet)}\n              >\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        {influence.planet === 'sun' && <SunIcon className=\"h-5 w-5 text-yellow-500\" />}\n                        {influence.planet === 'moon' && <MoonIcon className=\"h-5 w-5 text-blue-400\" />}\n                        {!['sun', 'moon'].includes(influence.planet) && <StarIcon className=\"h-5 w-5 text-purple-500\" />}\n                        <span className=\"capitalize\">{influence.planet}</span>\n                      </div>\n                      <Badge variant=\"outline\" className=\"capitalize\">\n                        {influence.sign}\n                      </Badge>\n                      <Badge variant=\"secondary\">\n                        House {influence.house}\n                      </Badge>\n                    </div>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-sm text-muted-foreground mb-3\">\n                    {influence.interpretation}\n                  </p>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {influence.keywords.map((keyword, keyIndex) => (\n                      <Badge key={keyIndex} variant=\"outline\" className=\"text-xs\">\n                        {keyword}\n                      </Badge>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        {/* Major Aspects Tab */}\n        <TabsContent value=\"aspects\" className=\"space-y-6\">\n          <div className=\"grid gap-4\">\n            {interpretation.majorAspects.map((aspectInfo, index) => (\n              <Card key={index}>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <GemIcon className=\"h-5 w-5 text-indigo-500\" />\n                      <span className=\"capitalize\">\n                        {aspectInfo.aspect.planet1} {getAspectSymbol(aspectInfo.aspect.type)} {aspectInfo.aspect.planet2}\n                      </span>\n                    </div>\n                    <Badge variant={getAspectVariant(aspectInfo.aspect.type)}>\n                      {aspectInfo.aspect.type}\n                    </Badge>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <p className=\"text-sm text-muted-foreground\">\n                    {aspectInfo.interpretation}\n                  </p>\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div>\n                      <h4 className=\"font-medium mb-1 text-blue-600\">Life Impact</h4>\n                      <p className=\"text-sm text-muted-foreground\">{aspectInfo.lifeImpact}</p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium mb-1 text-green-600\">Advice</h4>\n                      <p className=\"text-sm text-muted-foreground\">{aspectInfo.advice}</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        {/* Soul Purpose Tab */}\n        <TabsContent value=\"soul-purpose\" className=\"space-y-6\">\n          <Card className=\"bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <CompassIcon className=\"h-6 w-6 text-indigo-600\" />\n                <span>Your Soul's Journey</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <div>\n                    <h3 className=\"font-semibold text-green-600 mb-2\">North Node (Soul's Purpose)</h3>\n                    <p className=\"text-sm text-muted-foreground\">{interpretation.soulPurpose.northNode}</p>\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-orange-600 mb-2\">South Node (Past Life Gifts)</h3>\n                    <p className=\"text-sm text-muted-foreground\">{interpretation.soulPurpose.southNode}</p>\n                  </div>\n                </div>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h3 className=\"font-semibold text-blue-600 mb-2\">Life Lesson</h3>\n                    <p className=\"text-sm text-muted-foreground\">{interpretation.soulPurpose.lifeLesson}</p>\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-purple-600 mb-2\">Karmic Pattern</h3>\n                    <p className=\"text-sm text-muted-foreground\">{interpretation.soulPurpose.karmaticPattern}</p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Year Ahead Tab */}\n        <TabsContent value=\"year-ahead\" className=\"space-y-6\">\n          <div className=\"grid gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <TrendingUpIcon className=\"h-5 w-5 text-blue-600\" />\n                  <span>Major Themes</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  {interpretation.yearAhead.themes.map((theme, index) => (\n                    <div key={index} className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                      <span className=\"text-sm font-medium\">{theme}</span>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2 text-green-600\">\n                    <LightbulbIcon className=\"h-5 w-5\" />\n                    <span>Opportunities</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {interpretation.yearAhead.opportunities.map((opportunity, index) => (\n                      <li key={index} className=\"flex items-start space-x-2\">\n                        <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\n                        <span className=\"text-sm\">{opportunity}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2 text-orange-600\">\n                    <ShieldIcon className=\"h-5 w-5\" />\n                    <span>Guidance</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {interpretation.yearAhead.advice.map((advice, index) => (\n                      <li key={index} className=\"flex items-start space-x-2\">\n                        <div className=\"w-2 h-2 bg-orange-500 rounded-full mt-2 flex-shrink-0\" />\n                        <span className=\"text-sm\">{advice}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n\n// Helper functions\nfunction getAspectSymbol(aspectType: string): string {\n  switch (aspectType) {\n    case 'conjunction': return '☌'\n    case 'opposition': return '☍'\n    case 'trine': return '△'\n    case 'square': return '□'\n    case 'sextile': return '⚹'\n    case 'quincunx': return '⚻'\n    default: return '•'\n  }\n}\n\nfunction getAspectVariant(aspectType: string): 'default' | 'secondary' | 'destructive' | 'outline' {\n  switch (aspectType) {\n    case 'conjunction':\n    case 'trine':\n      return 'default'\n    case 'sextile':\n      return 'secondary'\n    case 'square':\n    case 'opposition':\n      return 'destructive'\n    default:\n      return 'outline'\n  }\n}"