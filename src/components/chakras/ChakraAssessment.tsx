'use client'\n\nimport React, { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { chakraAssessment, CHAKRA_DATABASE } from '@/lib/chakras/assessment'\nimport { ChakraType, ChakraAssessment as ChakraAssessmentType } from '@/types/spiritual'\nimport { cn } from '@/lib/utils'\nimport { \n  ZapIcon,\n  CircleIcon,\n  HeartIcon,\n  EyeIcon,\n  StarIcon,\n  SunIcon,\n  CheckCircleIcon,\n  AlertCircleIcon,\n  RefreshCwIcon\n} from 'lucide-react'\n\ninterface ChakraAssessmentProps {\n  className?: string\n}\n\ntype AssessmentStep = 'intro' | 'questions' | 'results'\n\nexport function ChakraAssessment({ className }: ChakraAssessmentProps) {\n  const [currentStep, setCurrentStep] = useState<AssessmentStep>('intro')\n  const [currentChakra, setCurrentChakra] = useState<ChakraType>('root')\n  const [responses, setResponses] = useState<Record<ChakraType, number[]>>({\n    root: [],\n    sacral: [],\n    solar_plexus: [],\n    heart: [],\n    throat: [],\n    third_eye: [],\n    crown: []\n  })\n  const [results, setResults] = useState<ChakraAssessmentType | null>(null)\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n\n  const chakraOrder: ChakraType[] = ['root', 'sacral', 'solar_plexus', 'heart', 'throat', 'third_eye', 'crown']\n  const currentChakraIndex = chakraOrder.indexOf(currentChakra)\n  const totalQuestions = chakraOrder.reduce((total, chakra) => \n    total + chakraAssessment.getQuestionsForChakra(chakra).length, 0\n  )\n  const answeredQuestions = Object.values(responses).reduce((total, answers) => total + answers.length, 0)\n\n  const getChakraColor = (chakra: ChakraType) => {\n    const colors = {\n      root: 'bg-red-500',\n      sacral: 'bg-orange-500',\n      solar_plexus: 'bg-yellow-500',\n      heart: 'bg-green-500',\n      throat: 'bg-blue-500',\n      third_eye: 'bg-indigo-500',\n      crown: 'bg-purple-500'\n    }\n    return colors[chakra]\n  }\n\n  const getChakraIcon = (chakra: ChakraType) => {\n    const icons = {\n      root: CircleIcon,\n      sacral: CircleIcon,\n      solar_plexus: SunIcon,\n      heart: HeartIcon,\n      throat: CircleIcon,\n      third_eye: EyeIcon,\n      crown: StarIcon\n    }\n    const Icon = icons[chakra]\n    return <Icon className=\"h-6 w-6\" />\n  }\n\n  const getScoreColor = (score: number) => {\n    if (score >= 4) return 'text-green-600'\n    if (score >= 3) return 'text-yellow-600'\n    return 'text-red-600'\n  }\n\n  const getScoreLabel = (score: number) => {\n    if (score >= 4.5) return 'Excellent'\n    if (score >= 4) return 'Balanced'\n    if (score >= 3) return 'Moderate'\n    if (score >= 2) return 'Needs Attention'\n    return 'Blocked'\n  }\n\n  const handleResponse = (rating: number) => {\n    const currentQuestions = chakraAssessment.getQuestionsForChakra(currentChakra)\n    const newResponses = { ...responses }\n    newResponses[currentChakra] = [...newResponses[currentChakra], rating]\n    setResponses(newResponses)\n\n    if (currentQuestionIndex + 1 < currentQuestions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1)\n    } else {\n      // Move to next chakra or finish\n      const nextChakraIndex = currentChakraIndex + 1\n      if (nextChakraIndex < chakraOrder.length) {\n        setCurrentChakra(chakraOrder[nextChakraIndex])\n        setCurrentQuestionIndex(0)\n      } else {\n        // Assessment complete\n        const assessment = chakraAssessment.calculateAssessment('user', newResponses)\n        setResults(assessment)\n        setCurrentStep('results')\n      }\n    }\n  }\n\n  const startAssessment = () => {\n    setCurrentStep('questions')\n    setCurrentChakra('root')\n    setCurrentQuestionIndex(0)\n  }\n\n  const resetAssessment = () => {\n    setCurrentStep('intro')\n    setCurrentChakra('root')\n    setCurrentQuestionIndex(0)\n    setResponses({\n      root: [],\n      sacral: [],\n      solar_plexus: [],\n      heart: [],\n      throat: [],\n      third_eye: [],\n      crown: []\n    })\n    setResults(null)\n  }\n\n  if (currentStep === 'results' && results) {\n    return (\n      <div className={cn('space-y-6', className)}>\n        {/* Header */}\n        <Card className=\"bg-gradient-to-br from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"flex items-center space-x-2\">\n                <ZapIcon className=\"h-6 w-6 text-purple-600\" />\n                <span>Your Chakra Assessment Results</span>\n              </CardTitle>\n              <Button variant=\"outline\" onClick={resetAssessment}>\n                <RefreshCwIcon className=\"h-4 w-4 mr-2\" />\n                Retake Assessment\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-center space-y-2\">\n              <div className=\"text-3xl font-bold text-purple-600\">\n                {results.overall_balance.toFixed(1)}/5.0\n              </div>\n              <p className=\"text-muted-foreground\">\n                Overall Chakra Balance Score\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Chakra Scores */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {chakraOrder.map((chakra) => {\n            const chakraData = CHAKRA_DATABASE[chakra]\n            const score = results.chakra_scores[chakra]\n            \n            return (\n              <Card key={chakra} className=\"text-center\">\n                <CardHeader>\n                  <div className={cn('mx-auto w-16 h-16 rounded-full flex items-center justify-center mb-2', getChakraColor(chakra))}>\n                    <div className=\"text-white\">\n                      {getChakraIcon(chakra)}\n                    </div>\n                  </div>\n                  <CardTitle className=\"text-lg\">{chakraData.name}</CardTitle>\n                  <div className=\"flex items-center justify-center space-x-2\">\n                    <span className={cn('text-2xl font-bold', getScoreColor(score))}>\n                      {score.toFixed(1)}\n                    </span>\n                    <Badge variant={score >= 3.5 ? 'default' : 'destructive'}>\n                      {getScoreLabel(score)}\n                    </Badge>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <Progress value={(score / 5) * 100} className=\"mb-3\" />\n                  <p className=\"text-sm text-muted-foreground\">\n                    {chakraData.sanskrit_name} â€¢ {chakraData.location}\n                  </p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n\n        {/* Recommendations */}\n        {results.recommendations.length > 0 && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <AlertCircleIcon className=\"h-5 w-5 text-orange-600\" />\n                <span>Personalized Recommendations</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-6\">\n                {results.recommendations.map((rec, index) => {\n                  const chakraData = CHAKRA_DATABASE[rec.chakra]\n                  \n                  return (\n                    <div key={index} className=\"border rounded-lg p-4\">\n                      <div className=\"flex items-center space-x-3 mb-3\">\n                        <div className={cn('w-8 h-8 rounded-full flex items-center justify-center', getChakraColor(rec.chakra))}>\n                          <div className=\"text-white text-sm\">\n                            {getChakraIcon(rec.chakra)}\n                          </div>\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold\">{chakraData.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">{rec.issue}</p>\n                        </div>\n                      </div>\n                      \n                      <Tabs defaultValue=\"suggestions\">\n                        <TabsList className=\"grid w-full grid-cols-3\">\n                          <TabsTrigger value=\"suggestions\">Suggestions</TabsTrigger>\n                          <TabsTrigger value=\"crystals\">Crystals</TabsTrigger>\n                          <TabsTrigger value=\"practices\">Practices</TabsTrigger>\n                        </TabsList>\n                        \n                        <TabsContent value=\"suggestions\" className=\"mt-3\">\n                          <ul className=\"space-y-2\">\n                            {rec.suggestions.map((suggestion, i) => (\n                              <li key={i} className=\"flex items-start space-x-2 text-sm\">\n                                <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\n                                <span>{suggestion}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </TabsContent>\n                        \n                        <TabsContent value=\"crystals\" className=\"mt-3\">\n                          <div className=\"flex flex-wrap gap-2\">\n                            {rec.crystals.map((crystal, i) => (\n                              <Badge key={i} variant=\"outline\">{crystal}</Badge>\n                            ))}\n                          </div>\n                        </TabsContent>\n                        \n                        <TabsContent value=\"practices\" className=\"mt-3\">\n                          <ul className=\"space-y-2\">\n                            {rec.practices.map((practice, i) => (\n                              <li key={i} className=\"flex items-start space-x-2 text-sm\">\n                                <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\n                                <span>{practice}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </TabsContent>\n                      </Tabs>\n                    </div>\n                  )\n                })}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Balanced Chakras */}\n        {results.recommendations.length < 7 && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <CheckCircleIcon className=\"h-5 w-5 text-green-600\" />\n                <span>Well-Balanced Chakras</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                {chakraOrder\n                  .filter(chakra => results.chakra_scores[chakra] >= 3.5)\n                  .map((chakra) => {\n                    const chakraData = CHAKRA_DATABASE[chakra]\n                    return (\n                      <div key={chakra} className=\"flex items-center space-x-3 p-3 border rounded-lg\">\n                        <div className={cn('w-8 h-8 rounded-full flex items-center justify-center', getChakraColor(chakra))}>\n                          <div className=\"text-white text-sm\">\n                            {getChakraIcon(chakra)}\n                          </div>\n                        </div>\n                        <div>\n                          <h4 className=\"font-medium\">{chakraData.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Score: {results.chakra_scores[chakra].toFixed(1)}/5.0\n                          </p>\n                        </div>\n                      </div>\n                    )\n                  })}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    )\n  }\n\n  if (currentStep === 'questions') {\n    const currentQuestions = chakraAssessment.getQuestionsForChakra(currentChakra)\n    const currentQuestion = currentQuestions[currentQuestionIndex]\n    const chakraData = CHAKRA_DATABASE[currentChakra]\n\n    return (\n      <div className={cn('space-y-6', className)}>\n        {/* Progress */}\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm font-medium\">Assessment Progress</span>\n                <span className=\"text-sm text-muted-foreground\">\n                  {answeredQuestions} of {totalQuestions} questions\n                </span>\n              </div>\n              <Progress value={(answeredQuestions / totalQuestions) * 100} />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Current Chakra */}\n        <Card className=\"bg-gradient-to-br from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20\">\n          <CardHeader>\n            <div className=\"text-center space-y-4\">\n              <div className={cn('mx-auto w-20 h-20 rounded-full flex items-center justify-center', getChakraColor(currentChakra))}>\n                <div className=\"text-white\">\n                  {getChakraIcon(currentChakra)}\n                </div>\n              </div>\n              <div>\n                <CardTitle className=\"text-2xl\">{chakraData.name}</CardTitle>\n                <p className=\"text-muted-foreground\">\n                  {chakraData.sanskrit_name} â€¢ {chakraData.location}\n                </p>\n              </div>\n            </div>\n          </CardHeader>\n        </Card>\n\n        {/* Question */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-center\">\n              Question {currentQuestionIndex + 1} of {currentQuestions.length}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-center space-y-6\">\n              <p className=\"text-lg leading-relaxed\">\n                {currentQuestion}\n              </p>\n              \n              <div className=\"space-y-3\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Rate how true this statement is for you:\n                </p>\n                \n                <div className=\"grid grid-cols-5 gap-3\">\n                  {[1, 2, 3, 4, 5].map((rating) => (\n                    <Button\n                      key={rating}\n                      variant=\"outline\"\n                      onClick={() => handleResponse(rating)}\n                      className=\"h-16 flex flex-col items-center justify-center space-y-1\"\n                    >\n                      <span className=\"text-2xl font-bold\">{rating}</span>\n                      <span className=\"text-xs\">\n                        {rating === 1 && 'Never'}\n                        {rating === 2 && 'Rarely'}\n                        {rating === 3 && 'Sometimes'}\n                        {rating === 4 && 'Often'}\n                        {rating === 5 && 'Always'}\n                      </span>\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Chakra Info */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">About the {chakraData.name}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-muted-foreground\">\n              {chakraData.description}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <Card className=\"bg-gradient-to-br from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <ZapIcon className=\"h-6 w-6 text-purple-600\" />\n            <span>Chakra Assessment</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-muted-foreground\">\n            Discover the balance of your seven energy centers and receive personalized recommendations for chakra healing.\n          </p>\n        </CardContent>\n      </Card>\n\n      {/* Introduction */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Understanding Your Chakras</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <p className=\"text-muted-foreground\">\n            Chakras are energy centers in your body that influence your physical, emotional, and spiritual well-being. \n            This assessment will help you understand which chakras are balanced and which may need attention.\n          </p>\n          \n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-semibold mb-3\">What You'll Discover:</h4>\n              <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                <li className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\n                  <span>Individual chakra balance scores</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\n                  <span>Overall energy system health</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\n                  <span>Personalized healing recommendations</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\n                  <span>Crystals and practices for balance</span>\n                </li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-3\">Assessment Details:</h4>\n              <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                <li className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\n                  <span>56 carefully crafted questions</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\n                  <span>8 questions per chakra</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\n                  <span>Takes approximately 10-15 minutes</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\" />\n                  <span>Instant detailed results</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Chakra Overview */}\n      <Card>\n        <CardHeader>\n          <CardTitle>The Seven Chakras</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {chakraOrder.map((chakra) => {\n              const chakraData = CHAKRA_DATABASE[chakra]\n              return (\n                <div key={chakra} className=\"flex items-center space-x-3 p-3 border rounded-lg\">\n                  <div className={cn('w-10 h-10 rounded-full flex items-center justify-center', getChakraColor(chakra))}>\n                    <div className=\"text-white text-sm\">\n                      {getChakraIcon(chakra)}\n                    </div>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium\">{chakraData.name}</h4>\n                    <p className=\"text-xs text-muted-foreground\">\n                      {chakraData.location}\n                    </p>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Start Assessment */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Ready to Begin?</h3>\n            <p className=\"text-muted-foreground\">\n              Answer honestly and trust your first instinct. There are no right or wrong answers.\n            </p>\n            <Button onClick={startAssessment} size=\"lg\" className=\"px-8\">\n              <ZapIcon className=\"h-5 w-5 mr-2\" />\n              Start Chakra Assessment\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"