'use client'\n\nimport React, { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { cn } from '@/lib/utils'\nimport { \n  SparklesIcon,\n  ShuffleIcon,\n  HeartIcon,\n  BriefcaseIcon,\n  StarIcon\n} from 'lucide-react'\n\n// Simple tarot card data for demo\nconst DEMO_CARDS = [\n  {\n    id: 'fool',\n    name: 'The Fool',\n    meaning: 'New beginnings, innocence, spontaneity, a free spirit',\n    reversed_meaning: 'Holding back, recklessness, risk-taking',\n    image: 'üÉè'\n  },\n  {\n    id: 'magician', \n    name: 'The Magician',\n    meaning: 'Manifestation, resourcefulness, power, inspired action',\n    reversed_meaning: 'Manipulation, poor planning, untapped talents',\n    image: 'üé©'\n  },\n  {\n    id: 'lovers',\n    name: 'The Lovers', \n    meaning: 'Love, harmony, relationships, choices',\n    reversed_meaning: 'Disharmony, imbalance, misalignment of values',\n    image: 'üíï'\n  },\n  {\n    id: 'star',\n    name: 'The Star',\n    meaning: 'Hope, faith, purpose, renewal',\n    reversed_meaning: 'Lack of faith, despair, self-trust',\n    image: '‚≠ê'\n  },\n  {\n    id: 'sun',\n    name: 'The Sun',\n    meaning: 'Positivity, fun, warmth, success',\n    reversed_meaning: 'Inner child, feeling down, overly optimistic',\n    image: '‚òÄÔ∏è'\n  }\n]\n\ninterface TarotReadingProps {\n  className?: string\n}\n\nexport function TarotReading({ className }: TarotReadingProps) {\n  const [selectedSpread, setSelectedSpread] = useState<'single' | 'three' | 'love'>('single')\n  const [drawnCards, setDrawnCards] = useState<any[]>([])\n  const [isReading, setIsReading] = useState(false)\n  const [question, setQuestion] = useState('')\n\n  const drawCards = () => {\n    setIsReading(true)\n    \n    // Simulate card drawing with animation delay\n    setTimeout(() => {\n      const numCards = selectedSpread === 'single' ? 1 : selectedSpread === 'three' ? 3 : 2\n      const shuffled = [...DEMO_CARDS].sort(() => Math.random() - 0.5)\n      const drawn = shuffled.slice(0, numCards).map(card => ({\n        ...card,\n        isReversed: Math.random() > 0.7 // 30% chance of reversed\n      }))\n      \n      setDrawnCards(drawn)\n      setIsReading(false)\n    }, 2000)\n  }\n\n  const resetReading = () => {\n    setDrawnCards([])\n    setQuestion('')\n  }\n\n  const getSpreadPositions = () => {\n    switch (selectedSpread) {\n      case 'single':\n        return ['Your Guidance']\n      case 'three':\n        return ['Past', 'Present', 'Future']\n      case 'love':\n        return ['You', 'Your Partner']\n      default:\n        return ['Card']\n    }\n  }\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <Card className=\"bg-gradient-to-br from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <SparklesIcon className=\"h-6 w-6 text-purple-600\" />\n            <span>Tarot Reading</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-muted-foreground\">\n            Draw cards to receive guidance and insights from the ancient wisdom of tarot.\n          </p>\n        </CardContent>\n      </Card>\n\n      {!drawnCards.length ? (\n        /* Card Selection */\n        <div className=\"space-y-6\">\n          {/* Spread Selection */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Choose Your Spread</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <Button\n                  variant={selectedSpread === 'single' ? 'default' : 'outline'}\n                  onClick={() => setSelectedSpread('single')}\n                  className=\"h-auto p-4 flex flex-col items-center space-y-2\"\n                >\n                  <StarIcon className=\"h-6 w-6\" />\n                  <div>\n                    <div className=\"font-semibold\">Single Card</div>\n                    <div className=\"text-xs text-muted-foreground\">Daily guidance</div>\n                  </div>\n                </Button>\n                \n                <Button\n                  variant={selectedSpread === 'three' ? 'default' : 'outline'}\n                  onClick={() => setSelectedSpread('three')}\n                  className=\"h-auto p-4 flex flex-col items-center space-y-2\"\n                >\n                  <SparklesIcon className=\"h-6 w-6\" />\n                  <div>\n                    <div className=\"font-semibold\">Three Card</div>\n                    <div className=\"text-xs text-muted-foreground\">Past, Present, Future</div>\n                  </div>\n                </Button>\n                \n                <Button\n                  variant={selectedSpread === 'love' ? 'default' : 'outline'}\n                  onClick={() => setSelectedSpread('love')}\n                  className=\"h-auto p-4 flex flex-col items-center space-y-2\"\n                >\n                  <HeartIcon className=\"h-6 w-6\" />\n                  <div>\n                    <div className=\"font-semibold\">Love Reading</div>\n                    <div className=\"text-xs text-muted-foreground\">Relationship insight</div>\n                  </div>\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Question Input */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Ask Your Question (Optional)</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <textarea\n                value={question}\n                onChange={(e) => setQuestion(e.target.value)}\n                placeholder=\"What guidance do you seek? Focus your intention...\"\n                className=\"w-full p-3 border rounded-lg min-h-[100px] resize-none\"\n              />\n            </CardContent>\n          </Card>\n\n          {/* Draw Cards Button */}\n          <div className=\"text-center\">\n            <Button\n              onClick={drawCards}\n              disabled={isReading}\n              size=\"lg\"\n              className=\"px-8 py-4\"\n            >\n              {isReading ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                  <span>Drawing Cards...</span>\n                </div>\n              ) : (\n                <div className=\"flex items-center space-x-2\">\n                  <ShuffleIcon className=\"h-5 w-5\" />\n                  <span>Draw Cards</span>\n                </div>\n              )}\n            </Button>\n          </div>\n        </div>\n      ) : (\n        /* Reading Results */\n        <div className=\"space-y-6\">\n          {/* Question Display */}\n          {question && (\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <p className=\"text-lg font-medium text-muted-foreground italic\">\n                    \"{question}\"\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Cards Display */}\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {drawnCards.map((card, index) => {\n              const position = getSpreadPositions()[index]\n              \n              return (\n                <Card key={card.id} className=\"text-center\">\n                  <CardHeader>\n                    <div className=\"space-y-2\">\n                      <Badge variant=\"outline\" className=\"mx-auto\">\n                        {position}\n                      </Badge>\n                      <div className=\"text-6xl\">{card.image}</div>\n                      <CardTitle className=\"flex items-center justify-center space-x-2\">\n                        <span>{card.name}</span>\n                        {card.isReversed && (\n                          <Badge variant=\"destructive\" className=\"text-xs\">\n                            Reversed\n                          </Badge>\n                        )}\n                      </CardTitle>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      <div className=\"text-sm text-muted-foreground\">\n                        <strong>Meaning:</strong>\n                      </div>\n                      <p className=\"text-sm\">\n                        {card.isReversed ? card.reversed_meaning : card.meaning}\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n              )\n            })}\n          </div>\n\n          {/* Reading Summary */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Your Reading Summary</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <p className=\"text-muted-foreground\">\n                  The cards have spoken! Here's what the universe wants you to know:\n                </p>\n                \n                {selectedSpread === 'single' && (\n                  <p>\n                    Focus on the energy of <strong>{drawnCards[0]?.name}</strong>. \n                    This card suggests that {drawnCards[0]?.isReversed ? 'you may need to look inward and address internal blocks' : 'positive energy is flowing in your direction'}.\n                  </p>\n                )}\n                \n                {selectedSpread === 'three' && (\n                  <p>\n                    Your journey shows a progression from {drawnCards[0]?.name} in your past, \n                    through {drawnCards[1]?.name} in your present, leading to {drawnCards[2]?.name} in your future. \n                    Trust the process and remain open to the lessons each phase brings.\n                  </p>\n                )}\n                \n                {selectedSpread === 'love' && (\n                  <p>\n                    In matters of the heart, {drawnCards[0]?.name} represents your energy, \n                    while {drawnCards[1]?.name} reflects your partner's or potential partner's energy. \n                    Focus on understanding and harmony between these energies.\n                  </p>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Actions */}\n          <div className=\"flex justify-center space-x-4\">\n            <Button variant=\"outline\" onClick={resetReading}>\n              New Reading\n            </Button>\n            <Button variant=\"outline\">\n              Save Reading\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"